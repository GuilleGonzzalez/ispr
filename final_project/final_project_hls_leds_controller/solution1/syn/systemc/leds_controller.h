// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leds_controller_HH_
#define _leds_controller_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "leds_controller_mbkb.h"

namespace ap_rtl {

struct leds_controller : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<7> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<16> > x;
    sc_in< sc_lv<4> > col_V;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    leds_controller(sc_module_name name);
    SC_HAS_PROCESS(leds_controller);

    ~leds_controller();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    leds_controller_mbkb<1,4,22,20,42>* leds_controller_mbkb_U0;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<20> > tmp_1_tr_fu_99_p2;
    sc_signal< sc_lv<20> > tmp_1_tr_reg_201;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_7_reg_206;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<40> > tmp_3_fu_122_p1;
    sc_signal< sc_lv<40> > tmp_3_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > tmp_9_reg_222;
    sc_signal< sc_lv<20> > tmp_5_fu_155_p1;
    sc_signal< sc_lv<20> > tmp_5_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<20> > neg_ti_fu_165_p2;
    sc_signal< sc_lv<20> > neg_ti_reg_232;
    sc_signal< sc_lv<19> > tmp_1_fu_87_p3;
    sc_signal< sc_lv<20> > tmp_1_cast_fu_95_p1;
    sc_signal< sc_lv<20> > tmp_fu_83_p1;
    sc_signal< sc_lv<22> > grp_fu_116_p0;
    sc_signal< sc_lv<42> > grp_fu_116_p2;
    sc_signal< sc_lv<40> > neg_mul_fu_136_p2;
    sc_signal< sc_lv<5> > tmp_8_fu_141_p4;
    sc_signal< sc_lv<20> > tmp_4_fu_151_p1;
    sc_signal< sc_lv<20> > tmp_6_fu_158_p3;
    sc_signal< sc_lv<20> > tmp_2_fu_171_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_180_p3;
    sc_signal< sc_lv<2> > tmp_10_fu_176_p1;
    sc_signal< sc_lv<2> > p_s_fu_188_p3;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<42> ap_const_lv42_1A36E3;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_grp_fu_116_p0();
    void thread_neg_mul_fu_136_p2();
    void thread_neg_ti_fu_165_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_s_fu_188_p3();
    void thread_tmp_10_fu_176_p1();
    void thread_tmp_11_fu_180_p3();
    void thread_tmp_1_cast_fu_95_p1();
    void thread_tmp_1_fu_87_p3();
    void thread_tmp_1_tr_fu_99_p2();
    void thread_tmp_2_fu_171_p3();
    void thread_tmp_3_fu_122_p1();
    void thread_tmp_4_fu_151_p1();
    void thread_tmp_5_fu_155_p1();
    void thread_tmp_6_fu_158_p3();
    void thread_tmp_8_fu_141_p4();
    void thread_tmp_fu_83_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
