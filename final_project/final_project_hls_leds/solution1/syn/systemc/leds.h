// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leds_HH_
#define _leds_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct leds : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<7> > row_V;
    sc_out< sc_lv<10> > col_V;
    sc_in< sc_lv<7> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;


    // Module declarations
    leds(sc_module_name name);
    SC_HAS_PROCESS(leds);

    ~leds();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > tmp_fu_141_p1;
    sc_signal< sc_lv<3> > tmp_reg_195;
    sc_signal< sc_lv<4> > p_Result_1_reg_200;
    sc_signal< sc_lv<4> > i_2_fu_160_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > out_col_V_fu_166_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_155_p2;
    sc_signal< sc_lv<3> > i_3_fu_177_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > out_row_V_fu_189_p2;
    sc_signal< sc_lv<1> > exitcond_fu_172_p2;
    sc_signal< sc_lv<10> > p_s_reg_94;
    sc_signal< sc_lv<4> > i_reg_107;
    sc_signal< sc_lv<7> > p_1_reg_118;
    sc_signal< sc_lv<3> > i_1_reg_130;
    sc_signal< sc_lv<7> > r_V_fu_183_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_col_V();
    void thread_exitcond1_fu_155_p2();
    void thread_exitcond_fu_172_p2();
    void thread_i_2_fu_160_p2();
    void thread_i_3_fu_177_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_out_col_V_fu_166_p2();
    void thread_out_row_V_fu_189_p2();
    void thread_r_V_fu_183_p2();
    void thread_row_V();
    void thread_tmp_fu_141_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
