// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_block_address0,
        in_block_ce0,
        in_block_q0,
        out_block_address0,
        out_block_ce0,
        out_block_we0,
        out_block_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_state7 = 9'd16;
parameter    ap_ST_fsm_state8 = 9'd32;
parameter    ap_ST_fsm_state9 = 9'd64;
parameter    ap_ST_fsm_pp1_stage0 = 9'd128;
parameter    ap_ST_fsm_state13 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] in_block_address0;
output   in_block_ce0;
input  [15:0] in_block_q0;
output  [5:0] out_block_address0;
output   out_block_ce0;
output   out_block_we0;
output  [15:0] out_block_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_block_ce0;
reg out_block_ce0;
reg out_block_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_129;
reg   [3:0] j_reg_140;
reg   [3:0] i_1_reg_151;
reg   [6:0] indvar_flatten1_reg_174;
reg   [3:0] j_1_reg_185;
reg   [3:0] i_3_reg_196;
wire   [0:0] tmp_fu_222_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_4_fu_228_p2;
reg   [3:0] i_4_reg_440;
wire   [0:0] exitcond_flatten_fu_234_p2;
reg   [0:0] exitcond_flatten_reg_445;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_445;
wire   [6:0] indvar_flatten_next_fu_240_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] i_1_mid2_fu_258_p3;
reg   [3:0] i_1_mid2_reg_454;
reg   [3:0] ap_reg_pp0_iter1_i_1_mid2_reg_454;
wire   [3:0] j_cast5_mid2_v_fu_266_p3;
reg   [3:0] j_cast5_mid2_v_reg_461;
reg   [3:0] ap_reg_pp0_iter1_j_cast5_mid2_v_reg_461;
wire   [3:0] i_6_fu_299_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] tmp_9_fu_329_p2;
wire    ap_CS_fsm_state8;
wire   [3:0] i_5_fu_335_p2;
reg   [3:0] i_5_reg_482;
wire   [0:0] exitcond_flatten1_fu_341_p2;
reg   [0:0] exitcond_flatten1_reg_487;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten1_reg_487;
wire   [6:0] indvar_flatten_next1_fu_347_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] i_3_mid2_fu_365_p3;
reg   [3:0] i_3_mid2_reg_496;
reg   [3:0] ap_reg_pp1_iter1_i_3_mid2_reg_496;
wire   [3:0] j_1_cast2_mid2_v_fu_373_p3;
reg   [3:0] j_1_cast2_mid2_v_reg_503;
reg   [3:0] ap_reg_pp1_iter1_j_1_cast2_mid2_v_reg_503;
wire   [3:0] i_7_fu_406_p2;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter2;
reg   [5:0] row_outbuf_address0;
reg    row_outbuf_ce0;
reg    row_outbuf_we0;
wire   [15:0] row_outbuf_q0;
reg   [5:0] col_outbuf_address0;
reg    col_outbuf_ce0;
reg    col_outbuf_we0;
wire   [15:0] col_outbuf_q0;
reg   [5:0] col_inbuf_address0;
reg    col_inbuf_ce0;
reg    col_inbuf_we0;
wire   [15:0] col_inbuf_q0;
wire    grp_dct_1d2_fu_207_ap_start;
wire    grp_dct_1d2_fu_207_ap_done;
wire    grp_dct_1d2_fu_207_ap_idle;
wire    grp_dct_1d2_fu_207_ap_ready;
wire   [5:0] grp_dct_1d2_fu_207_src_address0;
wire    grp_dct_1d2_fu_207_src_ce0;
reg   [15:0] grp_dct_1d2_fu_207_src_q0;
reg   [3:0] grp_dct_1d2_fu_207_i_2;
wire   [5:0] grp_dct_1d2_fu_207_dst_address0;
wire    grp_dct_1d2_fu_207_dst_ce0;
wire    grp_dct_1d2_fu_207_dst_we0;
wire   [15:0] grp_dct_1d2_fu_207_dst_d0;
reg   [3:0] grp_dct_1d2_fu_207_i_21;
reg   [3:0] i_reg_117;
wire    ap_CS_fsm_state3;
reg   [3:0] j_phi_fu_144_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] i_1_phi_fu_155_p4;
reg   [3:0] i_2_reg_162;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state7;
reg   [3:0] j_1_phi_fu_189_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] i_3_phi_fu_200_p4;
reg    ap_reg_grp_dct_1d2_fu_207_ap_start;
wire   [31:0] tmp_10_cast_fu_294_p1;
wire   [31:0] tmp_5_cast_fu_324_p1;
wire   [31:0] tmp_16_cast_fu_401_p1;
wire   [31:0] tmp_13_cast_fu_431_p1;
wire   [0:0] tmp_s_fu_252_p2;
wire   [3:0] j_2_fu_246_p2;
wire   [6:0] tmp_6_fu_277_p3;
wire   [7:0] j_cast5_mid2_cast_fu_274_p1;
wire   [7:0] tmp_8_cast_fu_284_p1;
wire   [7:0] tmp_2_fu_288_p2;
wire   [6:0] tmp_1_fu_304_p3;
wire   [7:0] i_1_cast4_cast_fu_315_p1;
wire   [7:0] tmp_4_cast_fu_311_p1;
wire   [7:0] tmp_5_fu_318_p2;
wire   [0:0] tmp_4_fu_359_p2;
wire   [3:0] j_3_fu_353_p2;
wire   [6:0] tmp_11_fu_384_p3;
wire   [7:0] j_1_cast2_mid2_cast_fu_381_p1;
wire   [7:0] tmp_15_cast_fu_391_p1;
wire   [7:0] tmp_12_fu_395_p2;
wire   [6:0] tmp_8_fu_411_p3;
wire   [7:0] i_3_cast1_cast_fu_422_p1;
wire   [7:0] tmp_12_cast_fu_418_p1;
wire   [7:0] tmp_10_fu_425_p2;
wire    ap_CS_fsm_state13;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_reg_grp_dct_1d2_fu_207_ap_start = 1'b0;
end

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
row_outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_outbuf_address0),
    .ce0(row_outbuf_ce0),
    .we0(row_outbuf_we0),
    .d0(grp_dct_1d2_fu_207_dst_d0),
    .q0(row_outbuf_q0)
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
col_outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_outbuf_address0),
    .ce0(col_outbuf_ce0),
    .we0(col_outbuf_we0),
    .d0(grp_dct_1d2_fu_207_dst_d0),
    .q0(col_outbuf_q0)
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
col_inbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_address0),
    .ce0(col_inbuf_ce0),
    .we0(col_inbuf_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_q0)
);

dct_1d2 grp_dct_1d2_fu_207(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_1d2_fu_207_ap_start),
    .ap_done(grp_dct_1d2_fu_207_ap_done),
    .ap_idle(grp_dct_1d2_fu_207_ap_idle),
    .ap_ready(grp_dct_1d2_fu_207_ap_ready),
    .src_address0(grp_dct_1d2_fu_207_src_address0),
    .src_ce0(grp_dct_1d2_fu_207_src_ce0),
    .src_q0(grp_dct_1d2_fu_207_src_q0),
    .i_2(grp_dct_1d2_fu_207_i_2),
    .dst_address0(grp_dct_1d2_fu_207_dst_address0),
    .dst_ce0(grp_dct_1d2_fu_207_dst_ce0),
    .dst_we0(grp_dct_1d2_fu_207_dst_we0),
    .dst_d0(grp_dct_1d2_fu_207_dst_d0),
    .i_21(grp_dct_1d2_fu_207_i_21)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state10))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state10 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dct_1d2_fu_207_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (1'd0 == tmp_9_fu_329_p2)))) begin
            ap_reg_grp_dct_1d2_fu_207_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dct_1d2_fu_207_ap_ready)) begin
            ap_reg_grp_dct_1d2_fu_207_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
        i_1_reg_151 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_445 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_1_reg_151 <= i_6_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_162 <= 4'd0;
    end else if (((grp_dct_1d2_fu_207_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_2_reg_162 <= i_5_reg_482;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
        i_3_reg_196 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_487) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_3_reg_196 <= i_7_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_dct_1d2_fu_207_ap_done == 1'b1))) begin
        i_reg_117 <= i_4_reg_440;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_117 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
        indvar_flatten1_reg_174 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten1_fu_341_p2))) begin
        indvar_flatten1_reg_174 <= indvar_flatten_next1_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
        indvar_flatten_reg_129 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_234_p2 == 1'd0))) begin
        indvar_flatten_reg_129 <= indvar_flatten_next_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
        j_1_reg_185 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_487) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_1_reg_185 <= j_1_cast2_mid2_v_reg_503;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
        j_reg_140 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_445 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_140 <= j_cast5_mid2_v_reg_461;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_445 <= exitcond_flatten_reg_445;
        ap_reg_pp0_iter1_i_1_mid2_reg_454 <= i_1_mid2_reg_454;
        ap_reg_pp0_iter1_j_cast5_mid2_v_reg_461 <= j_cast5_mid2_v_reg_461;
        exitcond_flatten_reg_445 <= exitcond_flatten_fu_234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten1_reg_487 <= exitcond_flatten1_reg_487;
        ap_reg_pp1_iter1_i_3_mid2_reg_496 <= i_3_mid2_reg_496;
        ap_reg_pp1_iter1_j_1_cast2_mid2_v_reg_503 <= j_1_cast2_mid2_v_reg_503;
        exitcond_flatten1_reg_487 <= exitcond_flatten1_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_234_p2 == 1'd0))) begin
        i_1_mid2_reg_454 <= i_1_mid2_fu_258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_fu_341_p2))) begin
        i_3_mid2_reg_496 <= i_3_mid2_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_4_reg_440 <= i_4_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_5_reg_482 <= i_5_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten1_fu_341_p2))) begin
        j_1_cast2_mid2_v_reg_503 <= j_1_cast2_mid2_v_fu_373_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_234_p2 == 1'd0))) begin
        j_cast5_mid2_v_reg_461 <= j_cast5_mid2_v_fu_266_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_234_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_341_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        col_inbuf_address0 = tmp_5_cast_fu_324_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_address0 = grp_dct_1d2_fu_207_src_address0;
    end else begin
        col_inbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        col_inbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_ce0 = grp_dct_1d2_fu_207_src_ce0;
    end else begin
        col_inbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_445 == 1'd0))) begin
        col_inbuf_we0 = 1'b1;
    end else begin
        col_inbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        col_outbuf_address0 = tmp_16_cast_fu_401_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_address0 = grp_dct_1d2_fu_207_dst_address0;
    end else begin
        col_outbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        col_outbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_ce0 = grp_dct_1d2_fu_207_dst_ce0;
    end else begin
        col_outbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_we0 = grp_dct_1d2_fu_207_dst_we0;
    end else begin
        col_outbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d2_fu_207_i_2 = i_2_reg_162;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d2_fu_207_i_2 = i_reg_117;
    end else begin
        grp_dct_1d2_fu_207_i_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d2_fu_207_i_21 = i_2_reg_162;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d2_fu_207_i_21 = i_reg_117;
    end else begin
        grp_dct_1d2_fu_207_i_21 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d2_fu_207_src_q0 = col_inbuf_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d2_fu_207_src_q0 = in_block_q0;
    end else begin
        grp_dct_1d2_fu_207_src_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_445 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        i_1_phi_fu_155_p4 = i_6_fu_299_p2;
    end else begin
        i_1_phi_fu_155_p4 = i_1_reg_151;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten1_reg_487) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_3_phi_fu_200_p4 = i_7_fu_406_p2;
    end else begin
        i_3_phi_fu_200_p4 = i_3_reg_196;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_ce0 = grp_dct_1d2_fu_207_src_ce0;
    end else begin
        in_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten1_reg_487) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_1_phi_fu_189_p4 = j_1_cast2_mid2_v_reg_503;
    end else begin
        j_1_phi_fu_189_p4 = j_1_reg_185;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_445 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        j_phi_fu_144_p4 = j_cast5_mid2_v_reg_461;
    end else begin
        j_phi_fu_144_p4 = j_reg_140;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        out_block_ce0 = 1'b1;
    end else begin
        out_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten1_reg_487))) begin
        out_block_we0 = 1'b1;
    end else begin
        out_block_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        row_outbuf_address0 = tmp_10_cast_fu_294_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_address0 = grp_dct_1d2_fu_207_dst_address0;
    end else begin
        row_outbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        row_outbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_ce0 = grp_dct_1d2_fu_207_dst_ce0;
    end else begin
        row_outbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_we0 = grp_dct_1d2_fu_207_dst_we0;
    end else begin
        row_outbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_222_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_dct_1d2_fu_207_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_234_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_234_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_329_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_dct_1d2_fu_207_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_341_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_341_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond_flatten1_fu_341_p2 = ((indvar_flatten1_reg_174 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_234_p2 = ((indvar_flatten_reg_129 == 7'd64) ? 1'b1 : 1'b0);

assign grp_dct_1d2_fu_207_ap_start = ap_reg_grp_dct_1d2_fu_207_ap_start;

assign i_1_cast4_cast_fu_315_p1 = ap_reg_pp0_iter1_i_1_mid2_reg_454;

assign i_1_mid2_fu_258_p3 = ((tmp_s_fu_252_p2[0:0] === 1'b1) ? 4'd0 : i_1_phi_fu_155_p4);

assign i_3_cast1_cast_fu_422_p1 = ap_reg_pp1_iter1_i_3_mid2_reg_496;

assign i_3_mid2_fu_365_p3 = ((tmp_4_fu_359_p2[0:0] === 1'b1) ? 4'd0 : i_3_phi_fu_200_p4);

assign i_4_fu_228_p2 = (i_reg_117 + 4'd1);

assign i_5_fu_335_p2 = (i_2_reg_162 + 4'd1);

assign i_6_fu_299_p2 = (i_1_mid2_reg_454 + 4'd1);

assign i_7_fu_406_p2 = (i_3_mid2_reg_496 + 4'd1);

assign in_block_address0 = grp_dct_1d2_fu_207_src_address0;

assign indvar_flatten_next1_fu_347_p2 = (indvar_flatten1_reg_174 + 7'd1);

assign indvar_flatten_next_fu_240_p2 = (indvar_flatten_reg_129 + 7'd1);

assign j_1_cast2_mid2_cast_fu_381_p1 = j_1_cast2_mid2_v_reg_503;

assign j_1_cast2_mid2_v_fu_373_p3 = ((tmp_4_fu_359_p2[0:0] === 1'b1) ? j_3_fu_353_p2 : j_1_phi_fu_189_p4);

assign j_2_fu_246_p2 = (j_phi_fu_144_p4 + 4'd1);

assign j_3_fu_353_p2 = (j_1_phi_fu_189_p4 + 4'd1);

assign j_cast5_mid2_cast_fu_274_p1 = j_cast5_mid2_v_reg_461;

assign j_cast5_mid2_v_fu_266_p3 = ((tmp_s_fu_252_p2[0:0] === 1'b1) ? j_2_fu_246_p2 : j_phi_fu_144_p4);

assign out_block_address0 = tmp_13_cast_fu_431_p1;

assign out_block_d0 = col_outbuf_q0;

assign tmp_10_cast_fu_294_p1 = tmp_2_fu_288_p2;

assign tmp_10_fu_425_p2 = (i_3_cast1_cast_fu_422_p1 + tmp_12_cast_fu_418_p1);

assign tmp_11_fu_384_p3 = {{i_3_mid2_reg_496}, {3'd0}};

assign tmp_12_cast_fu_418_p1 = tmp_8_fu_411_p3;

assign tmp_12_fu_395_p2 = (j_1_cast2_mid2_cast_fu_381_p1 + tmp_15_cast_fu_391_p1);

assign tmp_13_cast_fu_431_p1 = tmp_10_fu_425_p2;

assign tmp_15_cast_fu_391_p1 = tmp_11_fu_384_p3;

assign tmp_16_cast_fu_401_p1 = tmp_12_fu_395_p2;

assign tmp_1_fu_304_p3 = {{ap_reg_pp0_iter1_j_cast5_mid2_v_reg_461}, {3'd0}};

assign tmp_2_fu_288_p2 = (j_cast5_mid2_cast_fu_274_p1 + tmp_8_cast_fu_284_p1);

assign tmp_4_cast_fu_311_p1 = tmp_1_fu_304_p3;

assign tmp_4_fu_359_p2 = ((i_3_phi_fu_200_p4 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_5_cast_fu_324_p1 = tmp_5_fu_318_p2;

assign tmp_5_fu_318_p2 = (i_1_cast4_cast_fu_315_p1 + tmp_4_cast_fu_311_p1);

assign tmp_6_fu_277_p3 = {{i_1_mid2_reg_454}, {3'd0}};

assign tmp_8_cast_fu_284_p1 = tmp_6_fu_277_p3;

assign tmp_8_fu_411_p3 = {{ap_reg_pp1_iter1_j_1_cast2_mid2_v_reg_503}, {3'd0}};

assign tmp_9_fu_329_p2 = ((i_2_reg_162 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_fu_222_p2 = ((i_reg_117 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_s_fu_252_p2 = ((i_1_phi_fu_155_p4 == 4'd8) ? 1'b1 : 1'b0);

endmodule //dct_2d
