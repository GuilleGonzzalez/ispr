-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dct,hls_ip_2017_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.508000,HLS_SYN_LAT=3959,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=1,HLS_SYN_FF=875,HLS_SYN_LUT=816}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_28_cast_fu_163_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_cast_reg_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal r_fu_173_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_reg_314 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i_fu_183_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_reg_319 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_i_fu_167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_2d_in_addr_reg_324 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal c_fu_215_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_reg_332 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_i_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_cast_fu_239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_cast_reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_1_fu_249_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_1_reg_350 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i4_fu_259_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i4_reg_355 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_i3_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal c_1_fu_291_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_1_reg_368 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum3_i_fu_297_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum3_i_reg_373 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_i6_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_2d_in_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_in_ce0 : STD_LOGIC;
    signal buf_2d_in_we0 : STD_LOGIC;
    signal buf_2d_in_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_out_ce0 : STD_LOGIC;
    signal buf_2d_out_we0 : STD_LOGIC;
    signal buf_2d_out_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_2d_fu_147_ap_start : STD_LOGIC;
    signal grp_dct_2d_fu_147_ap_done : STD_LOGIC;
    signal grp_dct_2d_fu_147_ap_idle : STD_LOGIC;
    signal grp_dct_2d_fu_147_ap_ready : STD_LOGIC;
    signal grp_dct_2d_fu_147_in_block_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_2d_fu_147_in_block_ce0 : STD_LOGIC;
    signal grp_dct_2d_fu_147_out_block_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_2d_fu_147_out_block_ce0 : STD_LOGIC;
    signal grp_dct_2d_fu_147_out_block_we0 : STD_LOGIC;
    signal grp_dct_2d_fu_147_out_block_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_i_reg_103 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_i_reg_114 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal r_i2_reg_125 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal c_i5_reg_136 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_reg_grp_dct_2d_fu_147_ap_start : STD_LOGIC := '0';
    signal tmp_32_cast_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_i_cast_fu_226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_cast_fu_280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum3_i_cast_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_155_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_179_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_i_cast5_cast_fu_195_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_i_cast6_fu_191_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_i_fu_221_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_231_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_255_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_i5_cast1_cast_fu_271_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_275_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_i5_cast2_fu_267_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component dct_2d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in_block_ce0 : OUT STD_LOGIC;
        in_block_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_block_ce0 : OUT STD_LOGIC;
        out_block_we0 : OUT STD_LOGIC;
        out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_2d_row_outbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    buf_2d_in_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2d_in_address0,
        ce0 => buf_2d_in_ce0,
        we0 => buf_2d_in_we0,
        d0 => input_r_q0,
        q0 => buf_2d_in_q0);

    buf_2d_out_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2d_out_address0,
        ce0 => buf_2d_out_ce0,
        we0 => buf_2d_out_we0,
        d0 => grp_dct_2d_fu_147_out_block_d0,
        q0 => buf_2d_out_q0);

    grp_dct_2d_fu_147 : component dct_2d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dct_2d_fu_147_ap_start,
        ap_done => grp_dct_2d_fu_147_ap_done,
        ap_idle => grp_dct_2d_fu_147_ap_idle,
        ap_ready => grp_dct_2d_fu_147_ap_ready,
        in_block_address0 => grp_dct_2d_fu_147_in_block_address0,
        in_block_ce0 => grp_dct_2d_fu_147_in_block_ce0,
        in_block_q0 => buf_2d_in_q0,
        out_block_address0 => grp_dct_2d_fu_147_out_block_address0,
        out_block_ce0 => grp_dct_2d_fu_147_out_block_ce0,
        out_block_we0 => grp_dct_2d_fu_147_out_block_we0,
        out_block_d0 => grp_dct_2d_fu_147_out_block_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dct_2d_fu_147_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dct_2d_fu_147_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_167_p2 = ap_const_lv1_1))) then 
                    ap_reg_grp_dct_2d_fu_147_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dct_2d_fu_147_ap_ready)) then 
                    ap_reg_grp_dct_2d_fu_147_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_i5_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                c_i5_reg_136 <= c_1_reg_368;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond1_i3_fu_243_p2))) then 
                c_i5_reg_136 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    c_i_reg_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                c_i_reg_114 <= c_reg_332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_167_p2 = ap_const_lv1_0))) then 
                c_i_reg_114 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    r_i2_reg_125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i6_fu_285_p2 = ap_const_lv1_1))) then 
                r_i2_reg_125 <= r_1_reg_350;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_dct_2d_fu_147_ap_done = ap_const_logic_1))) then 
                r_i2_reg_125 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    r_i_reg_103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_fu_209_p2 = ap_const_lv1_1))) then 
                r_i_reg_103 <= r_reg_314;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_i_reg_103 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                buf_2d_in_addr_reg_324 <= tmp_32_cast_fu_204_p1(6 - 1 downto 0);
                c_reg_332 <= c_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                c_1_reg_368 <= c_1_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                r_1_reg_350 <= r_1_fu_249_p2;
                    tmp_31_cast_reg_342(6 downto 3) <= tmp_31_cast_fu_239_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                r_reg_314 <= r_fu_173_p2;
                    tmp_28_cast_reg_306(6 downto 3) <= tmp_28_cast_fu_163_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond_i6_fu_285_p2))) then
                sum3_i_reg_373 <= sum3_i_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond1_i3_fu_243_p2))) then
                    tmp_i4_reg_355(5 downto 3) <= tmp_i4_fu_259_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_167_p2 = ap_const_lv1_0))) then
                    tmp_i_reg_319(5 downto 3) <= tmp_i_fu_183_p3(5 downto 3);
            end if;
        end if;
    end process;
    tmp_28_cast_reg_306(2 downto 0) <= "000";
    tmp_28_cast_reg_306(7) <= '0';
    tmp_i_reg_319(2 downto 0) <= "000";
    tmp_31_cast_reg_342(2 downto 0) <= "000";
    tmp_31_cast_reg_342(7) <= '0';
    tmp_i4_reg_355(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_i_fu_167_p2, ap_CS_fsm_state3, exitcond_i_fu_209_p2, ap_CS_fsm_state6, exitcond1_i3_fu_243_p2, ap_CS_fsm_state7, exitcond_i6_fu_285_p2, grp_dct_2d_fu_147_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_167_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_fu_209_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_dct_2d_fu_147_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_i3_fu_243_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i6_fu_285_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_CS_fsm_state6, exitcond1_i3_fu_243_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_i3_fu_243_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, exitcond1_i3_fu_243_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_i3_fu_243_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_in_address0_assign_proc : process(buf_2d_in_addr_reg_324, grp_dct_2d_fu_147_in_block_address0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_2d_in_address0 <= buf_2d_in_addr_reg_324;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2d_in_address0 <= grp_dct_2d_fu_147_in_block_address0;
        else 
            buf_2d_in_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_2d_in_ce0_assign_proc : process(grp_dct_2d_fu_147_in_block_ce0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_2d_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2d_in_ce0 <= grp_dct_2d_fu_147_in_block_ce0;
        else 
            buf_2d_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_in_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_2d_in_we0 <= ap_const_logic_1;
        else 
            buf_2d_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_out_address0_assign_proc : process(ap_CS_fsm_state7, grp_dct_2d_fu_147_out_block_address0, ap_CS_fsm_state5, tmp_34_cast_fu_280_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_2d_out_address0 <= tmp_34_cast_fu_280_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2d_out_address0 <= grp_dct_2d_fu_147_out_block_address0;
        else 
            buf_2d_out_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_2d_out_ce0_assign_proc : process(ap_CS_fsm_state7, grp_dct_2d_fu_147_out_block_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_2d_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2d_out_ce0 <= grp_dct_2d_fu_147_out_block_ce0;
        else 
            buf_2d_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_out_we0_assign_proc : process(grp_dct_2d_fu_147_out_block_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2d_out_we0 <= grp_dct_2d_fu_147_out_block_we0;
        else 
            buf_2d_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c_1_fu_291_p2 <= std_logic_vector(unsigned(c_i5_reg_136) + unsigned(ap_const_lv4_1));
    c_fu_215_p2 <= std_logic_vector(unsigned(c_i_reg_114) + unsigned(ap_const_lv4_1));
    c_i5_cast1_cast_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i5_reg_136),8));
    c_i5_cast2_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i5_reg_136),6));
    c_i_cast5_cast_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i_reg_114),8));
    c_i_cast6_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i_reg_114),6));
    exitcond1_i3_fu_243_p2 <= "1" when (r_i2_reg_125 = ap_const_lv4_8) else "0";
    exitcond1_i_fu_167_p2 <= "1" when (r_i_reg_103 = ap_const_lv4_8) else "0";
    exitcond_i6_fu_285_p2 <= "1" when (c_i5_reg_136 = ap_const_lv4_8) else "0";
    exitcond_i_fu_209_p2 <= "1" when (c_i_reg_114 = ap_const_lv4_8) else "0";
    grp_dct_2d_fu_147_ap_start <= ap_reg_grp_dct_2d_fu_147_ap_start;
    input_r_address0 <= sum_i_cast_fu_226_p1(6 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_address0 <= sum3_i_cast_fu_302_p1(6 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= buf_2d_out_q0;

    output_r_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_1_fu_249_p2 <= std_logic_vector(unsigned(r_i2_reg_125) + unsigned(ap_const_lv4_1));
    r_fu_173_p2 <= std_logic_vector(unsigned(r_i_reg_103) + unsigned(ap_const_lv4_1));
    sum3_i_cast_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum3_i_reg_373),32));
    sum3_i_fu_297_p2 <= std_logic_vector(unsigned(c_i5_cast2_fu_267_p1) + unsigned(tmp_i4_reg_355));
    sum_i_cast_fu_226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_i_fu_221_p2),32));
    sum_i_fu_221_p2 <= std_logic_vector(unsigned(c_i_cast6_fu_191_p1) + unsigned(tmp_i_reg_319));
    tmp_21_fu_199_p2 <= std_logic_vector(unsigned(tmp_28_cast_reg_306) + unsigned(c_i_cast5_cast_fu_195_p1));
    tmp_22_fu_275_p2 <= std_logic_vector(unsigned(tmp_31_cast_reg_342) + unsigned(c_i5_cast1_cast_fu_271_p1));
    tmp_28_cast_fu_163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_155_p3),8));
    tmp_31_cast_fu_239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_231_p3),8));
    tmp_32_cast_fu_204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_199_p2),32));
    tmp_34_cast_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_275_p2),32));
    tmp_3_fu_179_p1 <= r_i_reg_103(3 - 1 downto 0);
    tmp_4_fu_255_p1 <= r_i2_reg_125(3 - 1 downto 0);
    tmp_fu_155_p3 <= (r_i_reg_103 & ap_const_lv3_0);
    tmp_i4_fu_259_p3 <= (tmp_4_fu_255_p1 & ap_const_lv3_0);
    tmp_i_fu_183_p3 <= (tmp_3_fu_179_p1 & ap_const_lv3_0);
    tmp_s_fu_231_p3 <= (r_i2_reg_125 & ap_const_lv3_0);
end behav;
