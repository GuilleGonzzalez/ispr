// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_1d2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        i_2,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        i_21
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [5:0] src_address1;
output   src_ce1;
input  [15:0] src_q1;
input  [3:0] i_2;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
input  [3:0] i_21;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] src_address0;
reg src_ce0;
reg[5:0] src_address1;
reg src_ce1;
reg dst_ce0;
reg dst_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire   [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire   [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire   [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire   [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_reg_267;
reg  signed [15:0] reg_278;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_flag00011001;
reg   [0:0] tmp_reg_627;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_flag00011001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_flag00011001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
reg  signed [15:0] reg_282;
wire   [7:0] tmp_18_cast_fu_294_p1;
reg   [7:0] tmp_18_cast_reg_582;
reg   [5:0] src_addr_reg_587;
reg   [5:0] src_addr_1_reg_592;
reg   [5:0] src_addr_2_reg_597;
reg   [5:0] src_addr_3_reg_602;
reg   [5:0] src_addr_4_reg_607;
reg   [5:0] src_addr_5_reg_612;
reg   [5:0] src_addr_6_reg_617;
reg   [5:0] src_addr_7_reg_622;
wire   [0:0] tmp_fu_416_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_reg_627;
wire   [3:0] k_1_fu_422_p2;
reg   [3:0] k_1_reg_631;
wire   [31:0] k_cast8_fu_428_p1;
reg   [31:0] k_cast8_reg_636;
wire   [7:0] tmp_30_fu_438_p2;
reg   [7:0] tmp_30_reg_646;
reg   [7:0] ap_reg_pp0_iter1_tmp_30_reg_646;
reg  signed [14:0] dct_coeff_table_1_lo_reg_666;
reg  signed [14:0] dct_coeff_table_3_lo_reg_671;
reg   [13:0] dct_coeff_table_0_lo_reg_681;
wire  signed [28:0] tmp_7_1_fu_526_p2;
reg  signed [28:0] tmp_7_1_reg_686;
wire  signed [28:0] tmp_7_3_fu_532_p2;
reg  signed [28:0] tmp_7_3_reg_696;
reg  signed [14:0] dct_coeff_table_5_lo_reg_706;
reg  signed [14:0] dct_coeff_table_2_lo_reg_721;
reg  signed [14:0] dct_coeff_table_4_lo_reg_726;
wire  signed [28:0] tmp_7_5_fu_545_p2;
reg  signed [28:0] tmp_7_5_reg_731;
reg  signed [14:0] dct_coeff_table_6_lo_reg_736;
reg  signed [14:0] dct_coeff_table_7_lo_reg_741;
wire  signed [28:0] grp_fu_538_p3;
reg  signed [28:0] tmp2_reg_746;
(* use_dsp48 = "no" *) wire   [28:0] tmp1_fu_485_p2;
reg   [28:0] tmp1_reg_751;
wire  signed [28:0] grp_fu_559_p3;
reg  signed [28:0] tmp5_reg_756;
wire  signed [28:0] grp_fu_566_p3;
reg  signed [28:0] tmp6_reg_761;
reg   [15:0] tmp_5_reg_766;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_flag00011011;
reg   [3:0] k_phi_fu_271_p4;
wire    ap_block_pp0_stage0_flag00000000;
wire   [31:0] tmp_15_fu_306_p1;
wire   [31:0] tmp_17_fu_317_p3;
wire   [31:0] tmp_19_fu_332_p3;
wire   [31:0] tmp_21_fu_347_p3;
wire   [31:0] tmp_23_fu_362_p3;
wire   [31:0] tmp_25_fu_377_p3;
wire   [31:0] tmp_27_fu_392_p3;
wire   [31:0] tmp_29_fu_407_p3;
wire    ap_block_pp0_stage1_flag00000000;
wire    ap_block_pp0_stage2_flag00000000;
wire   [31:0] tmp_35_cast_fu_522_p1;
wire    ap_block_pp0_stage3_flag00000000;
wire   [6:0] tmp_13_fu_286_p3;
wire   [6:0] tmp_14_fu_298_p3;
wire   [6:0] tmp_16_fu_311_p2;
wire   [6:0] tmp_18_fu_326_p2;
wire   [6:0] tmp_20_fu_341_p2;
wire   [6:0] tmp_22_fu_356_p2;
wire   [6:0] tmp_24_fu_371_p2;
wire   [6:0] tmp_26_fu_386_p2;
wire   [6:0] tmp_28_fu_401_p2;
wire   [7:0] k_cast8_cast_fu_434_p1;
wire  signed [28:0] grp_fu_551_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp4_fu_503_p2;
wire   [28:0] tmp_3_fu_507_p2;
wire   [13:0] grp_fu_538_p1;
wire  signed [28:0] grp_fu_573_p3;
wire   [13:0] grp_fu_573_p2;
wire    ap_CS_fsm_state10;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_flag00011011;
wire    ap_block_pp0_stage2_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_538_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dct_1d2_dct_coeffbkb #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_0_address0),
    .ce0(dct_coeff_table_0_ce0),
    .q0(dct_coeff_table_0_q0)
);

dct_1d2_dct_coeffcud #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_1_address0),
    .ce0(dct_coeff_table_1_ce0),
    .q0(dct_coeff_table_1_q0)
);

dct_1d2_dct_coeffdEe #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_2_address0),
    .ce0(dct_coeff_table_2_ce0),
    .q0(dct_coeff_table_2_q0)
);

dct_1d2_dct_coeffeOg #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_3_address0),
    .ce0(dct_coeff_table_3_ce0),
    .q0(dct_coeff_table_3_q0)
);

dct_1d2_dct_coefffYi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_4_address0),
    .ce0(dct_coeff_table_4_ce0),
    .q0(dct_coeff_table_4_q0)
);

dct_1d2_dct_coeffg8j #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_5_address0),
    .ce0(dct_coeff_table_5_ce0),
    .q0(dct_coeff_table_5_q0)
);

dct_1d2_dct_coeffhbi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_6_address0),
    .ce0(dct_coeff_table_6_ce0),
    .q0(dct_coeff_table_6_q0)
);

dct_1d2_dct_coeffibs #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_7_address0),
    .ce0(dct_coeff_table_7_ce0),
    .q0(dct_coeff_table_7_q0)
);

dct_mul_mul_16s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_1jbC_U0(
    .din0(reg_278),
    .din1(dct_coeff_table_1_lo_reg_666),
    .dout(tmp_7_1_fu_526_p2)
);

dct_mul_mul_16s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_1jbC_U1(
    .din0(reg_282),
    .din1(dct_coeff_table_3_lo_reg_671),
    .dout(tmp_7_3_fu_532_p2)
);

dct_mac_muladd_16kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16kbM_U2(
    .din0(reg_278),
    .din1(grp_fu_538_p1),
    .din2(tmp_7_1_reg_686),
    .dout(grp_fu_538_p3)
);

dct_mul_mul_16s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_1jbC_U3(
    .din0(reg_282),
    .din1(dct_coeff_table_5_lo_reg_706),
    .dout(tmp_7_5_fu_545_p2)
);

dct_mac_muladd_16lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16lbW_U4(
    .din0(reg_278),
    .din1(dct_coeff_table_2_lo_reg_721),
    .din2(tmp_7_3_reg_696),
    .dout(grp_fu_551_p3)
);

dct_mac_muladd_16lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16lbW_U5(
    .din0(reg_282),
    .din1(dct_coeff_table_4_lo_reg_726),
    .din2(tmp_7_5_reg_731),
    .dout(grp_fu_559_p3)
);

dct_mac_muladd_16lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16lbW_U6(
    .din0(reg_278),
    .din1(dct_coeff_table_6_lo_reg_736),
    .din2(grp_fu_573_p3),
    .dout(grp_fu_566_p3)
);

dct_mac_muladd_16mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16mb6_U7(
    .din0(reg_282),
    .din1(dct_coeff_table_7_lo_reg_741),
    .din2(grp_fu_573_p2),
    .dout(grp_fu_573_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        k_reg_267 <= k_1_reg_631;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_267 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_30_reg_646 <= tmp_30_reg_646;
        ap_reg_pp0_iter1_tmp_reg_627 <= tmp_reg_627;
        tmp_reg_627 <= tmp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        dct_coeff_table_0_lo_reg_681 <= dct_coeff_table_0_q0;
        dct_coeff_table_5_lo_reg_706 <= dct_coeff_table_5_q0;
        tmp_7_1_reg_686 <= tmp_7_1_fu_526_p2;
        tmp_7_3_reg_696 <= tmp_7_3_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (tmp_reg_627 == 1'd0))) begin
        dct_coeff_table_1_lo_reg_666 <= dct_coeff_table_1_q0;
        dct_coeff_table_3_lo_reg_671 <= dct_coeff_table_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        dct_coeff_table_2_lo_reg_721 <= dct_coeff_table_2_q0;
        dct_coeff_table_4_lo_reg_726 <= dct_coeff_table_4_q0;
        dct_coeff_table_6_lo_reg_736 <= dct_coeff_table_6_q0;
        dct_coeff_table_7_lo_reg_741 <= dct_coeff_table_7_q0;
        tmp_7_5_reg_731 <= tmp_7_5_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        k_1_reg_631 <= k_1_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_fu_416_p2))) begin
        k_cast8_reg_636[3 : 0] <= k_cast8_fu_428_p1[3 : 0];
        tmp_30_reg_646 <= tmp_30_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (tmp_reg_627 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        reg_278 <= src_q0;
        reg_282 <= src_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        src_addr_1_reg_592[5 : 3] <= tmp_17_fu_317_p3[5 : 3];
        src_addr_2_reg_597[5 : 3] <= tmp_19_fu_332_p3[5 : 3];
        src_addr_3_reg_602[5 : 3] <= tmp_21_fu_347_p3[5 : 3];
        src_addr_4_reg_607[5 : 3] <= tmp_23_fu_362_p3[5 : 3];
        src_addr_5_reg_612[5 : 3] <= tmp_25_fu_377_p3[5 : 3];
        src_addr_6_reg_617[5 : 3] <= tmp_27_fu_392_p3[5 : 3];
        src_addr_7_reg_622[5 : 3] <= tmp_29_fu_407_p3[5 : 3];
        src_addr_reg_587[5 : 3] <= tmp_15_fu_306_p1[5 : 3];
        tmp_18_cast_reg_582[6 : 3] <= tmp_18_cast_fu_294_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp1_reg_751 <= tmp1_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        tmp2_reg_746 <= grp_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp5_reg_756 <= grp_fu_559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_tmp_reg_627))) begin
        tmp6_reg_761 <= grp_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_reg_627))) begin
        tmp_5_reg_766 <= {{tmp_3_fu_507_p2[28:13]}};
    end
end

always @ (*) begin
    if ((tmp_fu_416_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        dct_coeff_table_0_ce0 = 1'b1;
    end else begin
        dct_coeff_table_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        dct_coeff_table_1_ce0 = 1'b1;
    end else begin
        dct_coeff_table_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        dct_coeff_table_2_ce0 = 1'b1;
    end else begin
        dct_coeff_table_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        dct_coeff_table_3_ce0 = 1'b1;
    end else begin
        dct_coeff_table_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        dct_coeff_table_4_ce0 = 1'b1;
    end else begin
        dct_coeff_table_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        dct_coeff_table_5_ce0 = 1'b1;
    end else begin
        dct_coeff_table_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        dct_coeff_table_6_ce0 = 1'b1;
    end else begin
        dct_coeff_table_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        dct_coeff_table_7_ce0 = 1'b1;
    end else begin
        dct_coeff_table_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dst_ce0 = 1'b1;
    end else begin
        dst_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_tmp_reg_627))) begin
        dst_we0 = 1'b1;
    end else begin
        dst_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_627 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        k_phi_fu_271_p4 = k_1_reg_631;
    end else begin
        k_phi_fu_271_p4 = k_reg_267;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            src_address0 = src_addr_6_reg_617;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            src_address0 = src_addr_2_reg_597;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            src_address0 = src_addr_reg_587;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            src_address0 = src_addr_1_reg_592;
        end else begin
            src_address0 = 'bx;
        end
    end else begin
        src_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            src_address1 = src_addr_7_reg_622;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            src_address1 = src_addr_4_reg_607;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            src_address1 = src_addr_5_reg_612;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            src_address1 = src_addr_3_reg_602;
        end else begin
            src_address1 = 'bx;
        end
    end else begin
        src_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        src_ce0 = 1'b1;
    end else begin
        src_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        src_ce1 = 1'b1;
    end else begin
        src_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_fu_416_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_fu_416_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((ap_block_pp0_stage3_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage3_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage3_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dct_coeff_table_0_address0 = k_cast8_reg_636;

assign dct_coeff_table_1_address0 = k_cast8_fu_428_p1;

assign dct_coeff_table_2_address0 = k_cast8_reg_636;

assign dct_coeff_table_3_address0 = k_cast8_fu_428_p1;

assign dct_coeff_table_4_address0 = k_cast8_reg_636;

assign dct_coeff_table_5_address0 = k_cast8_reg_636;

assign dct_coeff_table_6_address0 = k_cast8_reg_636;

assign dct_coeff_table_7_address0 = k_cast8_reg_636;

assign dst_address0 = tmp_35_cast_fu_522_p1;

assign dst_d0 = tmp_5_reg_766;

assign grp_fu_538_p1 = grp_fu_538_p10;

assign grp_fu_538_p10 = dct_coeff_table_0_lo_reg_681;

assign grp_fu_573_p2 = 29'd4096;

assign k_1_fu_422_p2 = (k_phi_fu_271_p4 + 4'd1);

assign k_cast8_cast_fu_434_p1 = k_phi_fu_271_p4;

assign k_cast8_fu_428_p1 = k_phi_fu_271_p4;

assign tmp1_fu_485_p2 = ($signed(tmp2_reg_746) + $signed(grp_fu_551_p3));

assign tmp4_fu_503_p2 = ($signed(tmp5_reg_756) + $signed(tmp6_reg_761));

assign tmp_13_fu_286_p3 = {{i_21}, {3'd0}};

assign tmp_14_fu_298_p3 = {{i_2}, {3'd0}};

assign tmp_15_fu_306_p1 = tmp_14_fu_298_p3;

assign tmp_16_fu_311_p2 = (tmp_14_fu_298_p3 | 7'd1);

assign tmp_17_fu_317_p3 = {{25'd0}, {tmp_16_fu_311_p2}};

assign tmp_18_cast_fu_294_p1 = tmp_13_fu_286_p3;

assign tmp_18_fu_326_p2 = (tmp_14_fu_298_p3 | 7'd2);

assign tmp_19_fu_332_p3 = {{25'd0}, {tmp_18_fu_326_p2}};

assign tmp_20_fu_341_p2 = (tmp_14_fu_298_p3 | 7'd3);

assign tmp_21_fu_347_p3 = {{25'd0}, {tmp_20_fu_341_p2}};

assign tmp_22_fu_356_p2 = (tmp_14_fu_298_p3 | 7'd4);

assign tmp_23_fu_362_p3 = {{25'd0}, {tmp_22_fu_356_p2}};

assign tmp_24_fu_371_p2 = (tmp_14_fu_298_p3 | 7'd5);

assign tmp_25_fu_377_p3 = {{25'd0}, {tmp_24_fu_371_p2}};

assign tmp_26_fu_386_p2 = (tmp_14_fu_298_p3 | 7'd6);

assign tmp_27_fu_392_p3 = {{25'd0}, {tmp_26_fu_386_p2}};

assign tmp_28_fu_401_p2 = (tmp_14_fu_298_p3 | 7'd7);

assign tmp_29_fu_407_p3 = {{25'd0}, {tmp_28_fu_401_p2}};

assign tmp_30_fu_438_p2 = (tmp_18_cast_reg_582 + k_cast8_cast_fu_434_p1);

assign tmp_35_cast_fu_522_p1 = ap_reg_pp0_iter1_tmp_30_reg_646;

assign tmp_3_fu_507_p2 = (tmp1_reg_751 + tmp4_fu_503_p2);

assign tmp_fu_416_p2 = ((k_phi_fu_271_p4 == 4'd8) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_18_cast_reg_582[2:0] <= 3'b000;
    tmp_18_cast_reg_582[7] <= 1'b0;
    src_addr_reg_587[2:0] <= 3'b000;
    src_addr_1_reg_592[2:0] <= 3'b001;
    src_addr_2_reg_597[2:0] <= 3'b010;
    src_addr_3_reg_602[2:0] <= 3'b011;
    src_addr_4_reg_607[2:0] <= 3'b100;
    src_addr_5_reg_612[2:0] <= 3'b101;
    src_addr_6_reg_617[2:0] <= 3'b110;
    src_addr_7_reg_622[2:0] <= 3'b111;
    k_cast8_reg_636[31:4] <= 28'b0000000000000000000000000000;
end

endmodule //dct_1d2
